<#@ assembly name="Microsoft.SqlServer.ConnectionInfo" #>
<#@ assembly name="Microsoft.SqlServer.Smo" #>
<#@ import namespace="Microsoft.SqlServer.Management.Smo" #>
<#+
public class InsertProcedureTemplate : Template
{
    public string DatabaseName;
    public Table Table;

    public override string TransformText()
    {   
		String procedureName = Table.Name + "_Insert";
		this.WriteLine("USE {0}",DatabaseName);
		
		this.WriteLine(string.Empty);
		this.WriteLine("SET ANSI_NULLS ON");		
		this.WriteLine("GO");		
		this.WriteLine("SET QUOTED_IDENTIFIER ON");		
		this.WriteLine("GO");		
		this.WriteLine(string.Empty);		
		
		this.WriteLine("IF EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'[{0}]')",procedureName);
		this.WriteLine("AND OBJECTPROPERTY(id, N'IsProcedure') = 1)");
		
		this.WriteLine(string.Empty);		
		this.WriteLine("DROP PROCEDURE DBO.[{0}]",procedureName);
		this.WriteLine("GO");
		
		this.WriteLine(string.Empty);
		this.WriteLine("CREATE PROCEDURE DBO.[{0}]",procedureName);		
		this.PushIndent("\t\t");
        string insertColumnList = "";
		string insertParameterList = "";
		
		string primaryKey = "";
		bool tableHasIdentity = false;
		foreach (Column column in Table.Columns)
		{
			if (column.InPrimaryKey)
			{
				primaryKey= column.Name;
			}
			if (column.Identity)
			{
				tableHasIdentity = true;
			}
			else if (column.DataType.Name!="timestamp" && column.DataType.Name!="rowversion" && column.Name.ToUpper()!="STARTDT")
			{					
	            if (insertColumnList.Length!=0)
				{
					this.WriteLine(", ");
					insertColumnList = String.Format("{0}, ",insertColumnList);
					insertParameterList = String.Format("{0}, ",insertParameterList);
				}
				this.Write("@{0} {1}",column.Name,column.DataType.Name);
				insertColumnList = String.Format("{0}{1}",insertColumnList,column.Name);			
				insertParameterList = String.Format("{0}@{1}",insertParameterList,column.Name);							
			}				
        }
		this.WriteLine(string.Empty);
        this.PopIndent();
		this.WriteLine("AS");
		this.PushIndent("\t");
		this.WriteLine("SET NOCOUNT ON");
		
		this.WriteLine(string.Empty);
		this.WriteLine("DECLARE @StartDt DateTime");
		this.WriteLine("Set @StartDt = GetDate()");
		
		this.WriteLine(string.Empty);
		this.WriteLine("INSERT into {0}",Table.Name);   
        this.PushIndent("\t\t");
		this.WriteLine("({0}, StartDt)",insertColumnList);   
		this.PopIndent();
		this.WriteLine("VALUES");        
		this.PushIndent("\t\t");
		this.WriteLine("({0}, @StartDt)",insertParameterList);   
		
		this.WriteLine(string.Empty);
		this.PopIndent();
		this.WriteLine("SELECT\t{0}, StartDt, DataVersion", primaryKey);
		this.WriteLine("FROM\t{0}",Table.Name);
		string whereClause = "SCOPE_IDENTITY()";
		if (!tableHasIdentity)
		{
			whereClause = String.Format("@{0}",primaryKey);
		}
		this.WriteLine("WHERE\t{0} = {1}", primaryKey,whereClause);
		this.WriteLine("AND\t\t@@ROWCOUNT > 0");
		
		this.PopIndent();
		this.WriteLine(string.Empty);
		this.WriteLine("GO");		
		
		return this.GenerationEnvironment.ToString();
	}
}
#>